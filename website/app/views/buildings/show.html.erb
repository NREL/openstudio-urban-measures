<h2>Building</h2>

<h3 class="edit-name"><%= @building.id %><% if can? :update, Building %> <%= link_to "[ edit ]", edit_building_path(@building), class: "edit-link" %><% end %></h3>

<table class="table table-striped">
  <% @building.attributes.keys.sort.each do |key| %>
    <tr>
      <th> <%= key == "_id" ? "ID" : key.gsub('_', ' ').titleize.gsub('Id', 'ID') %></th>
      <td><%= @building[key] %></td>
    </tr>
   <% end %>
</table>
<h3>Geometry (GeoJson)</h3>

<div id="map-container">
  <div id="map"></div>
</div>

<!--temporary: to inspect the geoJSON if needed -->
<table class="table table-striped">
  <tr>
    <th>Type</th>
    <td><%= @building.geometry.type %></td>
  </tr>
  <tr>
    <th>Coordinates</th>
    <td><% @building.geometry.coordinates[0].each do |c| %><%= c %><br/><% end %></td>
  </tr>
    <tr>
    <th>Centroid</th>
    <td><%= @building.geometry.centroid %></td>
  </tr>
</table>

<h3>Datapoints</h3>
<% if @building.datapoints.count == 0 %>
  <p> There are no datapoints for this building.</p>
<% else %>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>ID</th>
        <th>Analysis ID</th>
        <th>Date Created</th>  
      </tr>
    </thead>
    <tbody>
      <% @building.datapoints.each do |dp| %>
        <tr>
          <td><%= link_to dp.id, dp %></td>
          <td><%= dp.analysis_id %></td>
          <td><%= dp.created_at %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>
<%= link_to 'Add a Datapoint', new_datapoint_path(building: @building), class: "btn btn-primary" %>  

<script type="text/javascript">

  // get JSON
  $.getJSON('<%= get_route() %>.json',  function( geojsonFeature ) {

    var lat, lng, coords;

    // nesting depends on what we're plotting
    coords = geojsonFeature["geometry"]["coordinates"];
    if (geojsonFeature["geometry"]["type"] == "Polygon") {
      // polygon (3rd level)
      lng = coords[0][0][0];
      lat = coords[0][0][1];
    }  
    else {
      //assume multipolygon (4th level)
      lng = coords[0][0][0][0];
      lat = coords[0][0][0][1];
    }

    var map = L.map('map').setView([lat, lng], 18);

    L.tileLayer('https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoia2ZsZW1pbiIsImEiOiJjaWs1dHk4am8wMDh4cGlrc2RyN3dwN2dqIn0.KHvb3s8m6wNksZ2UbYOb_Q', {
    attribution: "&copy; <a href='https://www.mapbox.com/map-feedback/'>Mapbox</a> &copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a>",
    maxZoom: 22
    }).addTo(map);

    L.geoJson(geojsonFeature).addTo(map);

  });

</script>
