<!DOCTYPE html>
<meta charset="utf-8">
<title>Annual End Use Breakdown</title>
<link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css" rel="stylesheet">
<link href="file:///<%= web_asset_path %>/bootstrap.min.css" rel="stylesheet">
<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


<head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>Testing Pie Chart</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.1.3"></script>

    <style type="text/css">
        .slice text {
            font-size: 10pt;
            font-family: Arial;
        }
    </style>
    <style>
        <!--
        .tab { margin-left: 40px; }
        -->
    </style>

</head>
  <body>
    <div class="container-fluid">
      <a name= "top"></a>
      <h2>Annual End Use Breakdown</h2>
      <br>
      <h3>Table of Contents</h3>
      <% @tables.each do |table| %>
          <a href="#<%= table[:title].gsub(" ","_") %>"><%= table[:title] %></a>
          <br>
      <% end %>

        <% counter = 0 %>
        <% @tables.each do |table| %>
          <a name= "<%= table[:title].gsub(" ","_") %>"></a>
          <h3><%= table[:title] %></h3>
            <table class="table table-striped">
              <tr>
                <% table[:header].each do |header| %>
                    <th><%= header %></th>
                <% end %>
              </tr>

              <% table[:data].each do |row| %>
                  <tr>
                    <% row.each do |column| %>
                        <td>
                          <%= column %>
                        </td>
                    <% end %>
                  </tr>
              <% end %>

            </table>

              <% counter += 1 %>
              <% if !table[:chart].nil? %>
                  <div class="row">
                      <div id= "pie_chart<%= counter %>" class="col-md-4"></div>
                      <div class="col-md-4"></div>
                  </div>
              <% end %>
              <p align="right"><a href="#top">top</a></p>

                <script type="text/javascript">
                    (function(){
                    var w = 600,                        //width
                            h = 500,                            //height
                            r = 150,                            //radius
                            color = d3.scale.category20c();     //builtin range of colors

                            data = [<%= table[:chart] %>];

                    var vis = d3.select("#pie_chart<%= counter %>")
                            .append("svg:svg")              //create the SVG element inside the <body>
                            .data([data])                   //associate our data with the document
                            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                            .attr("height", h)
                            .append("svg:g")                //make a group to hold our pie chart
                            .attr("transform", "translate(" + w/2 + "," + h/2 + ")")    //move the center of the pie chart from 0, 0 to radius, radius

                    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
                            .outerRadius(r);

                    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
                            .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array

                    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
                            .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
                            .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                            .attr("class", "slice");    //allow us to style things in the slices (like text)

                    arcs.append("svg:path")
                            .attr("fill", function(d, i) { return data[i].color; } ) //set the color for each slice to be chosen from the color function defined above
                            //.attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above

                            .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function

                    arcs.append("svg:text")                                     //add a label to each slice
                            .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                                //we have to make sure to set these before calling arc.centroid
                                d.innerRadius = r*1.5;
                                d.outerRadius = r;
                                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                            })
                            .attr("text-anchor", "middle")                          //center the text on it's origin
                            .text(function(d, i) { return data[i].label; });        //get the label from our original data array
                    }());
                </script>
        <% end %>

    </div>
    <br>


  </body>
</html>

