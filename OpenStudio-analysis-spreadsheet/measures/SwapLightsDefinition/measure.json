{
  "classname": "SwapLightsDefinition",
  "name": "swap_lights_definition",
  "display_name": "Swap Lights Definition",
  "measure_type": "RubyMeasure",
  "arguments": [
    {
      "name": "old_lights_def",
      "display_name": "Choose the Lights Definition you Want to Replace",
      "variable_type": "Choice",
      "local_variable": "old_lights_def",
      "units": null,
      "choices": [

      ]
    },
    {
      "name": "new_lights_def",
      "display_name": "Choose the Lights Definition to Use in Place of Removed Definition",
      "variable_type": "Choice",
      "local_variable": "new_lights_def",
      "units": null,
      "choices": [

      ]
    },
    {
      "name": "demo_cost_initial_const",
      "display_name": "Demolition Costs Occur During Initial Definition",
      "variable_type": "Bool",
      "local_variable": "demo_cost_initial_const",
      "units": null,
      "default_value": false
    }
  ],
  "name_xml": "Swap Lights Definition",
  "uid": "3bbebd1f-69fd-4d49-96fe-1284bce962f4",
  "version_id": "606e2d25-fb1d-4e59-b34d-c1467ddfb3ac",
  "tags": [
    "Electric Lighting.Lighting Equipment"
  ],
  "modeler_description_xml": "This measure will not delete or change either definition, rather it just swaps out the references of one for the other. It is possible that the new definition is already used in the model elsewhere.\n    Each of these objects can be independently costed, however the measure can address demolition costs of the object being removed.\n  ",
  "description_xml": "This measure will swap out one lights definition for another. All objects that had referred to the original definition will now refer to the new one."
}